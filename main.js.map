{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/movie-nominations/movie-nominations.component.ts","./src/app/movie-nominations/movie-nominations.component.html","./src/app/search-movie/search-movie.component.ts","./src/app/search-movie/search-movie.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  //Totle nominations\n  totalFav = [];\n  favIsClicked = false;\n\n  constructor(private toastr: ToastrService) { }\n\n  //If user selects 5 favourites/nominations display a dialogue\n  onFavNum(fav: any) {\n    this.totalFav = fav;\n    if (this.totalFav.length == 5) {\n      this.toastr.success('Click the nomination button in the top right corner to view your nominations', 'You now have 5 nominations', {positionClass:'toast-top-center'});\n    }\n  }\n\n  favClicked() {\n    this.favIsClicked = true;\n  }\n\n  favClosed() {\n    this.favIsClicked = false;\n  }\n\n  homeButton() {\n    this.favIsClicked = false;\n  }\n\n  updateFav(event: any) {\n    this.totalFav = event;\n  }\n\n}\n","<div fxLayout=\"column\">\r\n  <!-- Top toolbar -->\r\n  <mat-toolbar class=\"toolbar-style\" fxLayout=\"row\"  fxLayoutAlign=\"space-between center\">\r\n    <div>\r\n      <button mat-icon-button (click)=\"homeButton()\">\r\n        <mat-icon>movie</mat-icon>\r\n      </button>\r\n      <span class=\"toolbar-text-color\">Movie Search</span>\r\n    </div>\r\n\r\n    <div>\r\n      <button mat-icon-button class=\"favorite-icon\" (click)=\"favClicked()\">\r\n        <mat-icon matBadge=\"{{totalFav.length}}\" matTooltip=\"Nominations\" matBadgeSize=\"small\" class=\"icon-style\">stars\r\n        </mat-icon>\r\n      </button>\r\n    </div>\r\n  </mat-toolbar>\r\n\r\n  <!-- App search and app nomination component selectors -->\r\n  <app-search-movie (favChanged)=\"onFavNum($event)\" [hidden]=\"favIsClicked\"></app-search-movie>\r\n  <app-movie-nominations [favMovies]=\"totalFav\" (favUpdated)=\"updateFav($event)\" (backClicked)=\"favClosed()\"\r\n    [hidden]=\"!favIsClicked\"></app-movie-nominations>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SearchMovieComponent } from './search-movie/search-movie.component';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatTableModule} from '@angular/material/table';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MovieNominationsComponent } from './movie-nominations/movie-nominations.component';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { FormsModule } from '@angular/forms';\nimport { ToastrModule } from 'ngx-toastr';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SearchMovieComponent,\n    MovieNominationsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    MatGridListModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    MatInputModule,\n    MatTableModule,\n    BrowserAnimationsModule,\n    MatBadgeModule,\n    MatTooltipModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    FlexLayoutModule,\n    MatDialogModule,\n    FormsModule,\n    ToastrModule.forRoot()\n    ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n\n@Component({\n  selector: 'app-movie-nominations',\n  templateUrl: './movie-nominations.component.html',\n  styleUrls: ['./movie-nominations.component.css']\n})\nexport class MovieNominationsComponent implements OnInit {\n\n  //Let app.components know when we select back or if we remove items from the nomination/favourites list\n  @Output() backClicked = new EventEmitter<any>();\n  @Output() favUpdated = new EventEmitter<any>();\n  @Input() favMovies: { Title: string, Type: string, Year: string, imdbID: string, fav: boolean, Poster: string }[] = [];;\n  breakpoint: any;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.breakpoint = this.checkBreakpoints(window);\n  }\n\n  onResize(event: any) {\n    this.breakpoint = this.checkBreakpoints(event.target);\n  }\n\n  //Determine breakpoints for nominations grid list \n  checkBreakpoints(target: any) {\n    if (target.innerWidth <= 760) {\n      return 1;\n    }\n    if (target.innerWidth <= 1100) {\n      return 2;\n    }\n    if (target.innerWidth <= 1450) {\n      return 3;\n    }\n    if (target.innerWidth <= 1600) {\n      return 4;\n    }\n    return 5;\n  }\n\n  backButton() {\n    this.backClicked.emit(false);\n  }\n\n  removeMovie(index: number) {\n    if (index != -1) {\n      this.favMovies.splice(index, 1);\n      this.favUpdated.emit(this.favMovies);\n    }\n  }\n\n  findAndDelMovie(movie: { Title: string, Type: string, Year: string, imdbID: string, fav: boolean }) {\n    for (var i = 0; i < this.favMovies.length; i++) {\n      if (this.favMovies[i].imdbID == movie.imdbID) {\n        this.removeMovie(i);\n      }\n    }\n  }\n}\n","<!-- Nomination Page -->\n<div fxLayout=\"column\" class=\"nomination-page center-element\">\n    <div>\n        <button mat-button color=\"primary\" (click)=\"backButton()\">\n            <mat-icon>arrow_back</mat-icon>Back\n        </button>\n    </div>\n\n    <mat-card class=\"header-style mat-elevation-z5\">\n        <mat-card-content fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n            <div class=\"title-style text-color\">\n                Nominations\n            </div>\n        </mat-card-content>\n\n    </mat-card>\n    <!-- Grid list for nominations-->\n    <mat-grid-list [cols]=\"breakpoint\" rowHeight=\"500px\" [gutterSize]=\"'20px'\" *ngIf=\"favMovies.length != 0\"\n        (window:resize)=\"onResize($event)\">\n        <mat-grid-tile *ngFor=\"let movie of favMovies\" class=\"card-style\">\n\n            <div fxLayout=\"column\" fxLayoutAlign=\"space-between center\" class=\"card-style\">\n\n\n                <div>\n                    <div class=\"close-container\">\n                        <button mat-icon-button class=\"close-button\">\n                            <mat-icon class=\"close-icon\" (click)=\"findAndDelMovie(movie)\">cancel</mat-icon>\n                        </button>\n                    </div>\n                    <img class=\"poster-style\" src=\"{{movie.Poster}}\">\n                </div>\n\n                <div class=\"movie-title\">\n                    {{movie.Title}} ({{movie.Year}})\n                </div>\n            </div>\n\n        </mat-grid-tile>\n    </mat-grid-list>\n\n    <!-- If no nominations are found -->\n    <div *ngIf=\"favMovies.length == 0\" class=\"no-nomination-text text-color\">\n        You have no nominations.\n    </div>\n\n</div>","import { Component, OnInit, EventEmitter, Input, Output, OnChanges, ViewChild } from '@angular/core';\nimport { MatTable } from '@angular/material/table';\n\n@Component({\n  selector: 'app-search-movie',\n  templateUrl: './search-movie.component.html',\n  styleUrls: ['./search-movie.component.css']\n})\nexport class SearchMovieComponent implements OnInit {\n\n  selectedType: string = \"movie\";\n  url: string = \"\";\n  page: number = 1\n  totalPages: number = 0;\n  title: string = \"\";\n  type: string;\n  year: string = \"\";\n  movies = [];\n  totalResults: number = 0;\n  favourite: { Title: string, Type: string, Year: string, imdbID: string, fav: boolean }[] = [];\n  displayedColumns = [\"Poster\", \"Title\", \"Type\", \"Year\", \"imdbID\", \"actions\"];\n  movieNotFound: boolean = false;\n  created: boolean = true;\n  searchBoxLayout: string = \"center center\";\n\n  @Output() favChanged = new EventEmitter<any>();\n  @ViewChild(MatTable) table: MatTable<any>;\n\n\n\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  \n  }\n\n  //Search movie by performing an api fetch request with the omdb api\n  searchMovie() {\n    //If applications just created set the boolean representation to false\n    if (this.created) { \n      this.created = false;\n      this.searchBoxLayout = \"space-between center\"; \n    }\n\n    this.url = \"https://www.omdbapi.com/?\";\n    //Combine various parameters to form url\n    this.url = this.url.concat( `s=${this.title}`, `&type=${this.selectedType}`, `&page=${this.page}`, `&y=${this.year}`, \"&apikey=f2de4f33\")\n\n    fetch(this.url)\n      .then(response => response.json())\n      .then((data) => {\n        if (data.Response == \"True\") {\n          this.movies = data.Search;\n          this.totalResults = data.totalResults;\n          this.totalPages = Math.ceil(this.totalResults / 10);\n          this.movieNotFound = false;\n        }\n        else if (data.Response == \"False\") {\n          this.movieNotFound = true;\n          this.totalResults = 0;\n          this.movies = [];\n        }\n      });\n  }\n\n  openMovie(id: string) {\n    var win = window.open(`https://vidsrc.me/embed/${id}/`);\n    if(win){\n      win.focus();\n    }\n  }\n\n\n  getMovieFromFav(movie: { Title: string, Type: string, Year: string, imdbID: string, fav: boolean }) {\n    for (var i = 0; i < this.favourite.length; i++) {\n      if (this.favourite[i].imdbID == movie.imdbID) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  addFavourite(movie: { Title: string, Type: string, Year: string, imdbID: string, fav: boolean }) {\n    movie.fav = true;\n    this.favourite.push(movie);\n    this.favChanged.emit(this.favourite);\n  }\n\n  /**\n   * \n   * @param flag - -1 means back, 1 means forward\n   */\n  changePage(flag: number) {\n    this.page += flag * 1;\n    this.searchMovie()\n  }\n\n  enterPage(page: string) {\n    let num = parseInt(page);\n    //Only search through pages within bounds\n    if (num >= 1 && num <= this.totalPages) {\n      this.page = num;\n      this.searchMovie()\n    }\n\n  }\n\n}\n\n\n","<!-- Movie searching -->\n<div class=\"center-element\">\n    <!-- Display welcome message when application first opened -->\n    <div fxLayout=\"column\" fxLayoutAlign=\"center center\" class=\"welcome-container\"\n        *ngIf=\"created\">\n        <div class=\"welcome-top-text\">Welcome to Movie Search!</div>\n        <div class=\"welcome-bottom-text\">Enter the title you would like to search</div>\n    </div>\n\n    <!-- Search bar -->\n    <mat-card class=\"search-container mat-elevation-z5\">\n        <mat-card-content fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n            <div fxLayout=\"row\" fxLayoutGap=\"20px\" [fxLayoutAlign]=\"searchBoxLayout\" [ngClass]=\"{'search-bar-on-start': created}\" >\n                <!-- search field -->\n                <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n                    <mat-icon>search</mat-icon>\n                    <mat-form-field>\n                        <input matInput type=\"text\" value=\"{{title}}\" placeholder=\"Title\" [(ngModel)]=\"title\"\n                            (keyup.enter)=\"searchMovie()\">\n                    </mat-form-field>\n                </div>\n                <!-- type selection -->\n                <mat-form-field class=\"type-selection\">\n                    <mat-label>Type</mat-label>\n                    <mat-select #type [(value)]=\"selectedType\">\n                        <mat-option value=\"movie\">Movie</mat-option>\n                        <mat-option value=\"series\">Series</mat-option>\n                        <mat-option value=\"episode\">Episode</mat-option>\n                        <mat-option value=\"game\">Game</mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <!-- Year input -->\n                <mat-form-field class=\"year-selection\">\n                    <input matInput type=\"text\" placeholder=\"Year\" value=\"{{year}}\" [(ngModel)]=\"year\"\n                        (keyup.enter)=\"searchMovie()\">\n                </mat-form-field>\n                <button mat-raised-button (click)=\"searchMovie()\" color=\"primary\">\n                    <span class=\"button-color\">Search</span>\n                </button>\n                <!-- Display message when no movies found-->\n                <div class=\"text-color\" *ngIf=\"!created\">\n                    Total Results: \n                    <span *ngIf=\"!movieNotFound\">{{ totalResults }}</span> \n                    <span *ngIf=\"movieNotFound\">No Movies Found!</span>\n                </div>\n            </div>\n\n            <!-- Page selection -->\n            <div class=\"page-selection\" *ngIf=\"!created\">\n                <button mat-icon-button class=\"favorite-icon\" [disabled]=\"page==1\" (click)=\"changePage(-1)\">\n                    <mat-icon matTooltip=\"Back\" class=\"icon-style\">arrow_back_ios</mat-icon>\n                </button>\n                <input type=\"number\" min=\"1\" max=\"999\" class=\"page-input\" #pageNum\n                    (keyup.enter)=\"enterPage(pageNum.value)\" value=\"{{page}}\">\n                <button mat-icon-button class=\"favorite-icon\" (click)=\"changePage(1)\" [disabled]=\"page>=totalPages\">\n                    <mat-icon matTooltip=\"Next\" class=\"icon-style\">arrow_forward_ios</mat-icon>\n                </button>\n            </div>\n        </mat-card-content>\n    </mat-card>\n\n\n    <!-- Results tabled. Takes the array of movies as its datasource -->\n    <table mat-table [dataSource]=\"movies\" [fixedLayout]=\"true\" class=\"mat-elevation-z3\" *ngIf=\"!created\">\n\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"Poster\">\n            <th mat-header-cell *matHeaderCellDef> Poster </th>\n            <td mat-cell *matCellDef=\"let element\"  (click)=\"openMovie(element.imdbID)\">\n                <img class=\"poster-style\" src=\"{{element.Poster}}\">\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"Title\">\n            <th mat-header-cell *matHeaderCellDef> Title </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.Title}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"Type\">\n            <th mat-header-cell *matHeaderCellDef> Type </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.Type}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"Year\">\n            <th mat-header-cell *matHeaderCellDef> Year </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.Year}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"imdbID\">\n            <th mat-header-cell *matHeaderCellDef> imdb ID </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.imdbID}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"actions\">\n            <th mat-header-cell *matHeaderCellDef></th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button mat-raised-button class=\"favorite-icon\" (click)=\"addFavourite(element)\"\n                    [disabled]=\"getMovieFromFav(element) != -1\" color=\"accent\">\n                    <span class=\"button-color\">Nominate</span>\n                </button>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}